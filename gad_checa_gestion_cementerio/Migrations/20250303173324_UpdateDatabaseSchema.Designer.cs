// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gad_checa_gestion_cementerio.Data;

#nullable disable

namespace gad_checa_gestion_cementerio.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250303173324_UpdateDatabaseSchema")]
    partial class UpdateDatabaseSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContratoResponsable", b =>
                {
                    b.Property<int>("ContratosId")
                        .HasColumnType("int");

                    b.Property<int>("ResponsablesId")
                        .HasColumnType("int");

                    b.HasKey("ContratosId", "ResponsablesId");

                    b.HasIndex("ResponsablesId");

                    b.ToTable("ContratoResponsable", (string)null);
                });

            modelBuilder.Entity("CuotaPago", b =>
                {
                    b.Property<int>("CuotasId")
                        .HasColumnType("int");

                    b.Property<int>("PagosId")
                        .HasColumnType("int");

                    b.HasKey("CuotasId", "PagosId");

                    b.HasIndex("PagosId");

                    b.ToTable("CuotaPago", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsuarioRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UsuarioTokens", (string)null);
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Bloque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BovedasPorPiso")
                        .HasColumnType("int");

                    b.Property<string>("CalleA")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CalleB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CementerioId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroDePisos")
                        .HasColumnType("int");

                    b.Property<decimal>("TarifaBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioActualizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioCreadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioEliminadorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CementerioId");

                    b.HasIndex("UsuarioActualizadorId");

                    b.HasIndex("UsuarioCreadorId");

                    b.HasIndex("UsuarioEliminadorId");

                    b.ToTable("Bloque");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Boveda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("PisoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioActualizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioCreadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioEliminadorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PisoId");

                    b.HasIndex("UsuarioActualizadorId");

                    b.HasIndex("UsuarioCreadorId");

                    b.HasIndex("UsuarioEliminadorId");

                    b.ToTable("Boveda");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Cementerio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioActualizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioCreadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioEliminadorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioActualizadorId");

                    b.HasIndex("UsuarioCreadorId");

                    b.HasIndex("UsuarioEliminadorId");

                    b.ToTable("Cementerio");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BovedaId")
                        .HasColumnType("int");

                    b.Property<int>("DifuntoId")
                        .HasColumnType("int");

                    b.Property<bool>("EsRenovacion")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NumeroDeMeses")
                        .HasColumnType("int");

                    b.Property<string>("NumeroSecuencial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioActualizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioCreadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioEliminadorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BovedaId");

                    b.HasIndex("DifuntoId")
                        .IsUnique();

                    b.HasIndex("UsuarioActualizadorId");

                    b.HasIndex("UsuarioCreadorId");

                    b.HasIndex("UsuarioEliminadorId");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Cuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Pagada")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("Cuota");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Descuento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("UsuarioActualizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioCreadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioEliminadorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioActualizadorId");

                    b.HasIndex("UsuarioCreadorId");

                    b.HasIndex("UsuarioEliminadorId");

                    b.ToTable("Descuento");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Difunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DescuentoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFallecimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UsuarioActualizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioCreadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioEliminadorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DescuentoId");

                    b.HasIndex("UsuarioActualizadorId");

                    b.HasIndex("UsuarioCreadorId");

                    b.HasIndex("UsuarioEliminadorId");

                    b.ToTable("Difunto");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.GADInformacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Mision")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Vision")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GadInformacion");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroComprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaPagoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("UsuarioActualizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioCreadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioEliminadorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioActualizadorId");

                    b.HasIndex("UsuarioCreadorId");

                    b.HasIndex("UsuarioEliminadorId");

                    b.ToTable("Persona");

                    b.HasDiscriminator<string>("TipoPersona").HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Piso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BloqueId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPiso")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BloqueId");

                    b.ToTable("Piso");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Responsable", b =>
                {
                    b.HasBaseType("gad_checa_gestion_cementerio.Data.Persona");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Responsable");
                });

            modelBuilder.Entity("ContratoResponsable", b =>
                {
                    b.HasOne("gad_checa_gestion_cementerio.Data.Contrato", null)
                        .WithMany()
                        .HasForeignKey("ContratosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gad_checa_gestion_cementerio.Data.Responsable", null)
                        .WithMany()
                        .HasForeignKey("ResponsablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CuotaPago", b =>
                {
                    b.HasOne("gad_checa_gestion_cementerio.Data.Cuota", null)
                        .WithMany()
                        .HasForeignKey("CuotasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gad_checa_gestion_cementerio.Data.Pago", null)
                        .WithMany()
                        .HasForeignKey("PagosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Bloque", b =>
                {
                    b.HasOne("gad_checa_gestion_cementerio.Data.Cementerio", "Cementerio")
                        .WithMany("Bloques")
                        .HasForeignKey("CementerioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioActualizador")
                        .WithMany()
                        .HasForeignKey("UsuarioActualizadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioEliminador")
                        .WithMany()
                        .HasForeignKey("UsuarioEliminadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Cementerio");

                    b.Navigation("UsuarioActualizador");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioEliminador");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Boveda", b =>
                {
                    b.HasOne("gad_checa_gestion_cementerio.Data.Piso", "Piso")
                        .WithMany()
                        .HasForeignKey("PisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioActualizador")
                        .WithMany()
                        .HasForeignKey("UsuarioActualizadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioEliminador")
                        .WithMany()
                        .HasForeignKey("UsuarioEliminadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Piso");

                    b.Navigation("UsuarioActualizador");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioEliminador");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Cementerio", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioActualizador")
                        .WithMany()
                        .HasForeignKey("UsuarioActualizadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioEliminador")
                        .WithMany()
                        .HasForeignKey("UsuarioEliminadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("UsuarioActualizador");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioEliminador");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Contrato", b =>
                {
                    b.HasOne("gad_checa_gestion_cementerio.Data.Boveda", "Boveda")
                        .WithMany()
                        .HasForeignKey("BovedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gad_checa_gestion_cementerio.Data.Difunto", "Difunto")
                        .WithOne("Contrato")
                        .HasForeignKey("gad_checa_gestion_cementerio.Data.Contrato", "DifuntoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioActualizador")
                        .WithMany()
                        .HasForeignKey("UsuarioActualizadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioEliminador")
                        .WithMany()
                        .HasForeignKey("UsuarioEliminadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Boveda");

                    b.Navigation("Difunto");

                    b.Navigation("UsuarioActualizador");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioEliminador");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Cuota", b =>
                {
                    b.HasOne("gad_checa_gestion_cementerio.Data.Contrato", "Contrato")
                        .WithMany("Cuotas")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Descuento", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioActualizador")
                        .WithMany()
                        .HasForeignKey("UsuarioActualizadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioEliminador")
                        .WithMany()
                        .HasForeignKey("UsuarioEliminadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("UsuarioActualizador");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioEliminador");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Difunto", b =>
                {
                    b.HasOne("gad_checa_gestion_cementerio.Data.Descuento", "Descuento")
                        .WithMany("Difuntos")
                        .HasForeignKey("DescuentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioActualizador")
                        .WithMany()
                        .HasForeignKey("UsuarioActualizadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioEliminador")
                        .WithMany()
                        .HasForeignKey("UsuarioEliminadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Descuento");

                    b.Navigation("UsuarioActualizador");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioEliminador");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Pago", b =>
                {
                    b.HasOne("gad_checa_gestion_cementerio.Data.Persona", null)
                        .WithMany("Pagos")
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Persona", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioActualizador")
                        .WithMany()
                        .HasForeignKey("UsuarioActualizadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioCreador")
                        .WithMany()
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UsuarioEliminador")
                        .WithMany()
                        .HasForeignKey("UsuarioEliminadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("UsuarioActualizador");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioEliminador");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Piso", b =>
                {
                    b.HasOne("gad_checa_gestion_cementerio.Data.Bloque", null)
                        .WithMany("Pisos")
                        .HasForeignKey("BloqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Bloque", b =>
                {
                    b.Navigation("Pisos");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Cementerio", b =>
                {
                    b.Navigation("Bloques");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Contrato", b =>
                {
                    b.Navigation("Cuotas");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Descuento", b =>
                {
                    b.Navigation("Difuntos");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Difunto", b =>
                {
                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("gad_checa_gestion_cementerio.Data.Persona", b =>
                {
                    b.Navigation("Pagos");
                });
#pragma warning restore 612, 618
        }
    }
}
