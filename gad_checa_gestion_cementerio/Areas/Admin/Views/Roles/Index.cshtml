@model IEnumerable<Microsoft.AspNetCore.Identity.IdentityRole>

@{
    ViewData["Title"] = "Gestión de Roles";
}

<!-- Contenido Principal -->
<div class="row">
    <div class="col-12">
        <div class="card overflow-hidden">
            <!-- Header de la Card -->
            <div class="card-header bg-primary-gradient text-white">
                <div class="d-flex align-items-center justify-content-between">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0">
                            <div class="avatar-lg bg-white bg-opacity-20 rounded">
                                <span class="avatar-title">
                                    <i class="ti ti-shield-lock fs-24"></i>
                                </span>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h5 class="mb-1 text-white">Roles del Sistema</h5>
                            <p class="mb-0 text-white-50">Administra los roles y permisos de usuarios</p>
                        </div>
                    </div>
                    <div class="flex-shrink-0">
                        <a asp-action="Create" class="btn btn-light btn-label">
                            <i class="ti ti-plus label-icon align-middle fs-14 me-2"></i>
                            Nuevo Rol
                        </a>
                    </div>
                </div>
            </div>

            <div class="card-body p-0">
                <!-- Mensajes de Estado -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-border-left alert-dismissible fade show m-3" role="alert">
                        <i class="ri-check-double-line me-3 align-middle fs-16"></i>
                        <div>
                            <strong>¡Éxito!</strong> @TempData["SuccessMessage"]
                        </div>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-border-left alert-dismissible fade show m-3" role="alert">
                        <i class="ri-error-warning-line me-3 align-middle fs-16"></i>
                        <div>
                            <strong>Error:</strong> @TempData["ErrorMessage"]
                        </div>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <!-- Estadísticas -->
                <div class="row g-0 border-bottom">
                    <div class="col-md-4">
                        <div class="p-3 text-center border-end">
                            <div class="avatar-sm bg-primary-subtle rounded mx-auto mb-2">
                                <span class="avatar-title">
                                    <i class="ti ti-shield text-primary"></i>
                                </span>
                            </div>
                            <h5 class="mb-1">@Model.Count()</h5>
                            <p class="text-muted mb-0">Total de Roles</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="p-3 text-center border-end">
                            <div class="avatar-sm bg-success-subtle rounded mx-auto mb-2">
                                <span class="avatar-title">
                                    <i class="ti ti-users text-success"></i>
                                </span>
                            </div>
                            <h5 class="mb-1">
                                @(Model.Where(r => r.Name != "SuperAdmin").Count())
                            </h5>
                            <p class="text-muted mb-0">Roles Activos</p>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="p-3 text-center">
                            <div class="avatar-sm bg-warning-subtle rounded mx-auto mb-2">
                                <span class="avatar-title">
                                    <i class="ti ti-crown text-warning"></i>
                                </span>
                            </div>
                            <h5 class="mb-1">
                                @(Model.Where(r => r.Name == "Admin" || r.Name == "SuperAdmin").Count())
                            </h5>
                            <p class="text-muted mb-0">Roles Admin</p>
                        </div>
                    </div>
                </div>

                <!-- Tabla de Roles -->
                <div class="table-responsive">
                    <table class="table table-hover table-nowrap align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" class="ps-4">
                                    <i class="ti ti-shield-check me-2"></i>Rol
                                </th>
                                <th scope="col">Estado</th>
                                <th scope="col">Descripción</th>
                                <th scope="col" class="text-center">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var role in Model)
                            {
                                <tr>
                                    <td class="ps-4">
                                        <div class="d-flex align-items-center">
                                            <div class="flex-shrink-0">
                                                <div class="avatar-sm 
                                                    @(role.Name == "SuperAdmin" ? "bg-danger-subtle" : 
                                                      role.Name == "Admin" ? "bg-warning-subtle" : 
                                                      "bg-info-subtle") rounded">
                                                    <span class="avatar-title">
                                                        <i class="ti 
                                                            @(role.Name == "SuperAdmin" ? "ti-crown text-danger" : 
                                                              role.Name == "Admin" ? "ti-shield-star text-warning" : 
                                                              "ti-user text-info")"></i>
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="flex-grow-1 ms-3">
                                                <h6 class="mb-1 fw-semibold">@role.Name</h6>
                                                <p class="text-muted mb-0 fs-13">ID: @role.Id.Substring(0, 8)...</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge 
                                            @(role.Name == "SuperAdmin" ? "bg-danger-subtle text-danger" : 
                                              "bg-success-subtle text-success") fs-12">
                                            <i class="ti ti-circle-filled fs-10 me-1"></i>
                                            @(role.Name == "SuperAdmin" ? "Sistema" : "Activo")
                                        </span>
                                    </td>
                                    <td>
                                        <span class="text-muted">
                                            @(role.Name == "SuperAdmin" ? "Administrador del sistema con acceso total" :
                                              role.Name == "Admin" ? "Administrador con permisos avanzados" :
                                              role.Name == "Usuario" ? "Usuario estándar del sistema" :
                                              "Rol personalizado del sistema")
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <div class="dropdown">
                                            <button class="btn btn-soft-secondary btn-sm dropdown-toggle" type="button" 
                                                    data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="ti ti-dots-vertical"></i>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end">
                                                <li>
                                                    <a class="dropdown-item" asp-action="UsersInRole" asp-route-id="@role.Id">
                                                        <i class="ti ti-users me-2"></i>Ver Usuarios
                                                    </a>
                                                </li>
                                                @if (role.Name != "SuperAdmin")
                                                {
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li>
                                                        <form asp-action="Delete" asp-route-id="@role.Id" method="post" 
                                                              onsubmit="return confirm('¿Está seguro de eliminar el rol @role.Name?');">
                                                            @Html.AntiForgeryToken()
                                                            <button type="submit" class="dropdown-item text-danger">
                                                                <i class="ti ti-trash me-2"></i>Eliminar Rol
                                                            </button>
                                                        </form>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (!Model.Any())
                {
                    <div class="text-center py-5">
                        <div class="avatar-lg bg-primary-subtle rounded mx-auto mb-3">
                            <span class="avatar-title">
                                <i class="ti ti-shield-off fs-24 text-primary"></i>
                            </span>
                        </div>
                        <h5 class="mb-2">No hay roles configurados</h5>
                        <p class="text-muted">Crea el primer rol para comenzar a gestionar permisos</p>
                        <div class="mt-3">
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="ti ti-plus me-1"></i>Crear Primer Rol
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Estilos personalizados para Mantis */
        .page-title-box {
            padding: 1.5rem 0;
            margin-bottom: 1.5rem;
        }

        .breadcrumb-item + .breadcrumb-item::before {
            content: ">";
        }

        .bg-primary-gradient {
            background: linear-gradient(135deg, #405189 0%, #5a67d8 100%);
        }

        .avatar-lg {
            width: 4rem;
            height: 4rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .avatar-sm {
            width: 2.5rem;
            height: 2.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .avatar-title {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            height: 100%;
        }

        .bg-primary-subtle {
            background-color: rgba(64, 81, 137, 0.1) !important;
        }

        .bg-success-subtle {
            background-color: rgba(34, 197, 94, 0.1) !important;
        }

        .bg-warning-subtle {
            background-color: rgba(251, 191, 36, 0.1) !important;
        }

        .bg-info-subtle {
            background-color: rgba(14, 165, 233, 0.1) !important;
        }

        .bg-danger-subtle {
            background-color: rgba(239, 68, 68, 0.1) !important;
        }

        .text-primary {
            color: #405189 !important;
        }

        .text-success {
            color: #22c55e !important;
        }

        .text-warning {
            color: #fbbc04 !important;
        }

        .text-info {
            color: #0ea5e9 !important;
        }

        .text-danger {
            color: #ef4444 !important;
        }

        .fs-24 {
            font-size: 1.5rem !important;
        }

        .fs-16 {
            font-size: 1rem !important;
        }

        .fs-14 {
            font-size: 0.875rem !important;
        }

        .fs-13 {
            font-size: 0.8125rem !important;
        }

        .fs-12 {
            font-size: 0.75rem !important;
        }

        .fs-10 {
            font-size: 0.625rem !important;
        }

        .btn-label {
            position: relative;
            padding-left: 2.5rem;
        }

        .label-icon {
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
        }

        .btn-soft-secondary {
            background-color: rgba(116, 120, 141, 0.1);
            border-color: rgba(116, 120, 141, 0.1);
            color: #74788d;
        }

        .btn-soft-secondary:hover {
            background-color: rgba(116, 120, 141, 0.2);
            border-color: rgba(116, 120, 141, 0.2);
            color: #74788d;
        }

        .alert-border-left {
            border-left: 3px solid;
        }

        .alert-success.alert-border-left {
            border-left-color: #22c55e;
        }

        .alert-danger.alert-border-left {
            border-left-color: #ef4444;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 0, 0, 0.025);
        }

        .dropdown-menu {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border: 1px solid rgba(0, 0, 0, 0.125);
        }

        .dropdown-item:hover {
            background-color: rgba(0, 0, 0, 0.04);
        }

        .dropdown-item.text-danger:hover {
            background-color: rgba(239, 68, 68, 0.1);
            color: #ef4444 !important;
        }

        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border: 1px solid rgba(0, 0, 0, 0.125);
        }

        .table-light {
            background-color: #f8f9fa;
        }

        .fw-semibold {
            font-weight: 600;
        }

        .badge {
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            font-weight: 500;
        }
    </style>
}
