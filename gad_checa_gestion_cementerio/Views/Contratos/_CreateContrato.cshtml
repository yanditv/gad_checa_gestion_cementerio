@model gad_checa_gestion_cementerio.Models.ContratoModel
@{
    ViewData["Title"] = "Crear Contrato";
}

@if (Model.EsRenovacion && Model.ContratoOrigenId.HasValue)
{
    <div class="alert alert-primary border-0 shadow-sm mb-4">
        <div class="d-flex align-items-start">
            <span class="badge bg-primary p-2 rounded-circle me-3">
                <i class="ti ti-refresh text-white"></i>
            </span>
            <div class="flex-grow-1">
                <h5 class="alert-heading mb-2 text-primary">
                    <i class="ti ti-info-circle me-1"></i>
                    Este es un contrato de renovación
                </h5>
                <p class="mb-1">Este contrato renueva el contrato original con ID: <strong>@Model.ContratoOrigenId</strong>
                </p>
                @if (ViewBag.ContratoOriginalNumero != null)
                {
                    <p class="mb-0 small text-muted">
                        Número de contrato original: <span
                            class="badge bg-light text-dark">@ViewBag.ContratoOriginalNumero</span>
                    </p>
                }
            </div>
        </div>
    </div>
}

<!-- Formulario principal -->
<div class="card border-0 shadow-sm">
    <div class="card-header bg-light border-0 py-3">
        <div class="d-flex align-items-center">
            <span class="me-3">
                <i class="ti ti-file-text text-primary fs-4"></i>
            </span>
            <div>
                <h4 class="mb-1 text-dark">Datos del Contrato</h4>
                <p class="mb-0 text-muted small">Complete la información requerida para el contrato</p>
            </div>
        </div>
    </div>

    <div class="card-body p-4">
        <form asp-action="CreateContrato" method="post">
            <div class="row g-3">
                <!-- Campo Número Secuencial -->
                <div class="col-md-6">
                    <label asp-for="NumeroSecuencial" class="form-label fw-semibold">
                        <i class="ti ti-hash me-1 text-primary"></i>
                        Número Secuencial
                    </label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="ti ti-hash text-muted"></i>
                        </span>
                        <input asp-for="NumeroSecuencial" readonly class="form-control border-start-0 bg-light" />
                    </div>
                    <span asp-validation-for="NumeroSecuencial" class="text-danger small"></span>
                </div>

                <!-- Campo Bóveda con botón de búsqueda -->
                <div class="col-md-6">
                    <label asp-for="BovedaId" class="form-label fw-semibold">
                        <i class="ti ti-building me-1 text-primary"></i>
                        Bóveda
                    </label>
                    <input asp-for="BovedaId" hidden readonly class="form-control" />
                    <input asp-for="Boveda.NumeroSecuencial" hidden readonly class="form-control" />
                    <input asp-for="EsRenovacion" type="hidden" />
                    <input asp-for="ContratoOrigenId" type="hidden" />

                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="ti ti-building text-muted"></i>
                        </span>
                        <input id="boveda_seleccionada"
                            value="Bóveda #@(Model.Boveda?.NumeroSecuencial ?? Model.BovedaId.ToString())" readonly
                            class="form-control border-start-0 border-end-0" />
                        <button type="button" class="btn btn-outline-primary" onclick="abrirModalBovedas('')"
                            @(Model.NumeroSecuencial != null && Model.NumeroSecuencial.StartsWith("RNV-") ? "disabled" :
                                                        "")>
                            <i class="ti ti-search me-1"></i> Buscar
                        </button>
                    </div>
                    <span asp-validation-for="BovedaId" class="text-danger small"></span>
                </div>
            </div>

            <div class="row g-3 mt-2">
                <!-- Fecha de Inicio -->
                <div class="col-md-6">
                    <label asp-for="FechaInicio" class="form-label fw-semibold">
                        <i class="ti ti-calendar me-1 text-primary"></i>
                        Fecha de Inicio
                    </label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="ti ti-calendar text-muted"></i>
                        </span>
                        <input asp-for="FechaInicio" type="date" class="form-control border-start-0" />
                    </div>
                    <span asp-validation-for="FechaInicio" class="text-danger small"></span>
                </div>

                <!-- Fecha de Fin -->
                <div class="col-md-6">
                    <label asp-for="FechaFin" class="form-label fw-semibold">
                        <i class="ti ti-calendar-event me-1 text-primary"></i>
                        Fecha de Fin
                    </label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="ti ti-calendar-event text-muted"></i>
                        </span>
                        <input asp-for="FechaFin" type="date" class="form-control border-start-0" />
                    </div>
                    <span asp-validation-for="FechaFin" class="text-danger small"></span>
                </div>
            </div>

            <div class="row g-3 mt-2">
                <!-- Número de Años -->
                <div class="col-md-6">
                    <label asp-for="NumeroDeMeses" class="form-label fw-semibold">
                        <i class="ti ti-clock me-1 text-primary"></i>
                        Número de Años
                    </label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="ti ti-clock text-muted"></i>
                        </span>
                        <input asp-for="NumeroDeMeses" type="number" class="form-control border-start-0" />
                        <span class="input-group-text bg-light">años</span>
                    </div>
                    <span asp-validation-for="NumeroDeMeses" class="text-danger small"></span>
                </div>

                <!-- Monto Total -->
                <div class="col-md-6">
                    <label asp-for="MontoTotal" class="form-label fw-semibold">
                        <i class="ti ti-currency-dollar me-1 text-primary"></i>
                        Monto Total
                    </label>
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">$</span>
                        <input asp-for="MontoTotal" type="number" step="0.01" class="form-control border-start-0" />
                    </div>
                    <span asp-validation-for="MontoTotal" class="text-danger small"></span>
                </div>
            </div>

            <!-- Observaciones -->
            <div class="mt-4">
                <label asp-for="Observaciones" class="form-label fw-semibold">
                    <i class="ti ti-notes me-1 text-primary"></i>
                    Observaciones
                </label>
                <div class="input-group">
                    <span class="input-group-text bg-light border-end-0 align-items-start pt-2">
                        <i class="ti ti-notes text-muted"></i>
                    </span>
                    <textarea asp-for="Observaciones" rows="3" class="form-control border-start-0"
                        placeholder="Ingrese observaciones adicionales..."></textarea>
                </div>
                <span asp-validation-for="Observaciones" class="text-danger small"></span>
            </div>

            @if (Model.EsRenovacion && Model.ContratoOrigenId.HasValue)
            {
                <div class="alert alert-info border-0 mt-4">
                    <div class="d-flex align-items-center">
                        <i class="ti ti-info-circle me-2 fs-5"></i>
                        <div>
                            <strong>Información de renovación</strong>
                            <p class="mb-0 small">Este contrato está vinculado al contrato original ID:
                                @Model.ContratoOrigenId</p>
                        </div>
                    </div>
                </div>
            }
        </form>
    </div>
</div>

<div id="contenedorModalBovedas"></div>
@* @await Html.PartialAsync("_SelectBoveda", new List<gad_checa_gestion_cementerio.Models.BovedaModel>()) *@

<script>




    document.getElementById('FechaInicio').addEventListener('change', calcularCuotas);
    document.getElementById('FechaFin').addEventListener('change', calcularCuotas);
    document.getElementById('MontoTotal').addEventListener('input', calcularCuotas);

    function calcularCuotas() {
        var fechaInicio = new Date(document.getElementById('FechaInicio').value);
        var fechaFin = new Date(document.getElementById('FechaFin').value);
        var montoTotal = parseFloat(document.getElementById('MontoTotal').value);
        var cuotasContainer = document.getElementById('cuotasContainer');
        cuotasContainer.innerHTML = '';

        if (isNaN(fechaInicio) || isNaN(fechaFin) || isNaN(montoTotal)) {
            return;
        }

        var numeroDeMeses = (fechaFin.getFullYear() - fechaInicio.getFullYear()) * 12 + (fechaFin.getMonth() - fechaInicio.getMonth());
        document.getElementById('NumeroDeMeses').value = numeroDeMeses;

        var montoCuota = montoTotal / numeroDeMeses;

        for (var i = 0; i < numeroDeMeses; i++) {
            var cuotaFecha = new Date(fechaInicio);
            cuotaFecha.setMonth(cuotaFecha.getMonth() + i);

            var cuotaDiv = document.createElement('div');
            cuotaDiv.className = 'form-group';

            var cuotaLabel = document.createElement('label');
            cuotaLabel.innerText = 'Cuota ' + (i + 1) + ' - Fecha: ' + cuotaFecha.toLocaleDateString() + ' - Monto: ' + montoCuota.toFixed(2);
            cuotaDiv.appendChild(cuotaLabel);

            cuotasContainer.appendChild(cuotaDiv);
        }
    }

</script>

<script>

    function renderTablaBovedas(data) {
        const tbody = document.getElementById("tablaBovedasBody");
        tbody.innerHTML = ""; // Limpiar

        data.bovedas.forEach(boveda => {
            const row = document.createElement("tr");

            row.innerHTML = `
            <td>${boveda.numeroSecuencial}</td>
            <td>${boveda.numero}</td>
            <td>${boveda.estado}</td>
            <td>
                <button type="button" class="btn btn-success btn-sm"
                    onclick="seleccionarBoveda(${boveda.id}, '${boveda.numeroSecuencial}')">
                    Seleccionar
                </button>
            </td>
        `;

            tbody.appendChild(row);
        });

        // Aquí podrías regenerar también la paginación si quieres
        //renderPaginacion(data.paginaActual, data.totalPaginas);
    }
    function abrirModalBovedas(filtro) {
        const tipoSelect = document.getElementById('tipoBoveda');
        const tipo = tipoSelect ? tipoSelect.value : '';

        fetch(`/Contratos/BuscarBovedas?filtro=${encodeURIComponent(filtro)}&tipo=${encodeURIComponent(tipo)}&pagina=1`)
            .then(response => response.text())
            .then(html => {
                document.getElementById('contenedorModalBovedas').innerHTML = html;

                // Esperar a que el HTML sea insertado antes de iniciar el modal
                requestAnimationFrame(() => {
                    const modalElement = document.getElementById('modalBovedas');
                    if (modalElement) {
                        const modal = new bootstrap.Modal(modalElement);
                        modal.show();

                        // Esperar a que el modal se muestre antes de llamar a buscarBovedasJson
                        modalElement.addEventListener('shown.bs.modal', function () {
                            buscarBovedasJson(1);
                        }, { once: true }); // Solo una vez por apertura
                    } else {
                        console.error('modalBovedas no se encontró en el DOM.');
                    }
                });
            });
    }

    function buscarBovedasJson(pagina = 1) {
        const filtroInput = document.getElementById('filtroBoveda');
        const tipoSelect = document.getElementById('tipoBoveda');
        const filtro = filtroInput ? filtroInput.value : '';
        const tipo = tipoSelect ? tipoSelect.value : '';

        fetch(`/Contratos/BuscarBovedasJson?filtro=${encodeURIComponent(filtro)}&tipo=${encodeURIComponent(tipo)}&pagina=${pagina}`)
            .then(response => {
                if (!response.ok) throw new Error('Error en la solicitud');
                return response.json();
            })
            .then(data => {
                const body = document.getElementById('tablaBovedasBody');
                body.innerHTML = '';
                console.log(data);

                data.bovedas.forEach(b => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${b.numeroSecuencial == null ? "S/N" : b.numeroSecuencial}</td>
                        
                        <td>${b.numero}</td>
                        <td>${b.tipo}</td>
                        <td>${b.estado}</td>
                        <td>
                            <button type="button" class="btn btn-success btn-sm"
                                    onclick="seleccionarBoveda(${b.id}, '${b.numeroSecuencial}')">
                                Seleccionar
                            </button>
                        </td>
                    `;
                    body.appendChild(row);
                });

                generarPaginacion(data.paginaActual, data.totalPaginas, filtro);
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }


    function generarPaginacion(paginaActual, totalPaginas, filtro) {
        const paginacion = document.getElementById('paginacionBovedas');
        paginacion.innerHTML = '';

        const tieneAnterior = paginaActual > 1;
        const tieneSiguiente = paginaActual < totalPaginas;

        const contenedor = document.createElement('div');
        contenedor.classList.add('d-flex', 'justify-content-between', 'align-items-center', 'my-3', 'small');

        const info = document.createElement('div');
        info.textContent = `Página ${paginaActual} de ${totalPaginas}`;

        const controles = document.createElement('div');
        controles.innerHTML = `
        <button class="btn btn-sm btn-light me-2" ${!tieneAnterior ? 'disabled' : ''} onclick="buscarBovedasJson(${paginaActual - 1})">
            &larr; Prev
        </button>
        <button class="btn btn-sm btn-light" ${!tieneSiguiente ? 'disabled' : ''} onclick="buscarBovedasJson(${paginaActual + 1})">
            Next &rarr;
        </button>
    `;

        contenedor.appendChild(info);
        contenedor.appendChild(controles);
        paginacion.appendChild(contenedor);
    }



    // Seleccionar una bóveda y cerrar el modal
    function seleccionarBoveda(id, numeroSecuencial) {
        const inputBovedaId = document.getElementById('BovedaId');
        const inputBovedaSeleccionada = document.getElementById('boveda_seleccionada');
        const inputNumeroSecuencial = document.querySelector('input[name="NumeroSecuencial"]')
        const numeroSecuencialSpan = document.querySelector('input[name="Boveda.NumeroSecuencial"]');
        const inputEsRenovacion = document.getElementById('EsRenovacion');
        const inputContratoOrigenId = document.getElementById('ContratoOrigenId');

        if (inputBovedaId) {
            inputBovedaId.value = id;
            numeroSecuencialSpan.value = numeroSecuencial;

            // Preservar los valores de renovación antes de la solicitud
            const esRenovacion = inputEsRenovacion.value === 'True' || inputEsRenovacion.value === 'true';
            const contratoOrigenId = inputContratoOrigenId.value;

            fetch('@Url.Action("RecargarContratoByTipo", "Contratos")?idBoveda=' + id)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Actualiza el campo del secuencial en el formulario
                        inputNumeroSecuencial.value = data.data.numeroSecuencial;

                        // Si hay un elemento para mostrar el número secuencial, actualizarlo también
                        const numeroSecuencialElement = document.getElementById("numero-secuencial-contrato");
                        if (numeroSecuencialElement) {
                            numeroSecuencialElement.textContent = data.data.numeroSecuencial;
                        }

                        // Restaurar los valores de renovación si es necesario
                        if (esRenovacion) {
                            inputEsRenovacion.value = 'true';
                        }

                        if (contratoOrigenId) {
                            inputContratoOrigenId.value = contratoOrigenId;
                        }

                        // Actualizar la información del contrato original si está disponible
                        if (data.data.contratoOriginalNumero) {
                            // Intentar actualizar la información en la UI si existe un contenedor para ello
                            const infoContratoOriginal = document.querySelector('.info-contrato-original');
                            if (infoContratoOriginal) {
                                infoContratoOriginal.textContent = data.data.contratoOriginalNumero;
                            }
                        }
                    }
                })
                .catch(error => {
                    console.error('Error al recargar el contrato:', error);
                });

            inputBovedaId.dispatchEvent(new Event('change'));
            inputNumeroSecuencial.dispatchEvent(new Event('change'));
            numeroSecuencialSpan.dispatchEvent(new Event('change'));


            inputBovedaSeleccionada.value = `Bóveda #${numeroSecuencialSpan.value == "null" ? inputBovedaId.value : numeroSecuencialSpan.value}`;

            inputBovedaSeleccionada.dispatchEvent(new Event('change'))
        }

        // Cerrar el modal
        const modalElement = document.getElementById('modalBovedas');
        if (modalElement) {
            const modal = bootstrap.Modal.getInstance(modalElement);
            modal.hide();
        }
    }
</script>


