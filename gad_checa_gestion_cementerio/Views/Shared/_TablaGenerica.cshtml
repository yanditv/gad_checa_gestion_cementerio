@using System.Collections
@model IEnumerable<dynamic>

@{
    // Obtiene el nombre de la acción (por ejemplo, "Boveda" o "Bloque")
    var actionName = ViewContext.RouteData.Values["action"]?.ToString() ?? string.Empty;
    // URL para la acción "Create"
    var createUrl = Url.Action("Create", "Cementerio", new { entityType = actionName });
}
<div class="my-4">
    <div class="card">
        <div class="card-header d-flex flex-wrap justify-content-between align-items-center">
            <div>
                <h4 class="card-title mb-2">@ViewData["Title"]</h4>
                <p class="text-muted">
                    Gestione los registros: puede listar, modificar, buscar y eliminar.
                </p>
            </div>
            <div class="d-flex gap-2 align-items-center mt-3 mt-md-0 flex-wrap-nowrap">
                <div>
                    <div class="input-group">
                        <input type="text" id="hs-table-with-pagination-search" class="form-control form-control-sm"
                            placeholder="Buscar..." aria-label="Search" />
                        <span class="input-group-text">
                            <i class="ti ti-search"></i>
                        </span>
                    </div>
                </div>
                <a class="btn btn-outline-secondary btn-md" asp-action="Index">
                    Ver todos
                </a>
                <a class="btn btn-primary btn-md" asp-action="Create" asp-route-entityType="@ViewData["EntityType"]">
                    <i class="ti ti-plus"></i> <span class="no-wrap">Crear</span><span class="no-wrap"> Nuevo</span>
                </a>
            </div>
        </div>
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover mb-0">
                    <thead class="table-secondary">
                        <tr>
                            <th scope="col">
                                <input type="checkbox" class="form-check-input" id="hs-at-with-checkboxes-main" />
                            </th>
                            @foreach (var property in Model.First().GetType().GetProperties())
                            {
                                <th scope="col" class="text-uppercase small fw-bold">
                                    @property.Name
                                </th>
                            }
                            <th scope="col" class="text-end text-uppercase small fw-bold">
                                Acciones
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" class="form-check-input" />
                                </td>
                                @foreach (var property in item.GetType().GetProperties())
                                {
                                    <td>
                                        @property.GetValue(item, null)
                                    </td>
                                }
                                <td class="text-end">
                                    <a class="btn btn-sm btn-outline-primary" asp-action="Edit"
                                        asp-route-entityType="@ViewData["EntityType"]" asp-route-id="@item.Id" data-modal>
                                        <i class="ti ti-edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-sm btn-outline-danger delete-button"
                                        data-hs-overlay="#hs-vertically-centered-modal" data-id="@item.Id">
                                        <i class="ti ti-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="p-3">
                <p class="text-muted mb-0">No hay registros disponibles.</p>
            </div>
        }

        <div class="card-footer d-flex justify-content-between">
            <p class="mb-0">
                <small>Página 1 de 10 • Total 12 resultados</small>
            </p>
            <div>
                <button class="btn btn-sm btn-light me-2" type="button">
                    <i class="ti ti-arrow-left"></i> Prev
                </button>
                <button class="btn btn-sm btn-light" type="button">
                    Next <i class="ti ti-arrow-right"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("_ConfirmDelete")