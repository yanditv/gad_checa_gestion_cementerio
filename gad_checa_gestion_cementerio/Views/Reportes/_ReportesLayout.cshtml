@{
    Layout = "~/Views/Shared/_Layout.cshtml"; // Este layout compartido puede ser el principal de tu aplicación
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString();
    var entityType = Context.Request.Query["entityType"].ToString();
}

<div class="border-bottom">
    <ul class="nav nav-tabs" id="reportesTabs" role="tablist">
        @foreach (var tab in new[]
                {
                new { Id = "tabs-with-icons-1", Name = "Cuentas por cobrar", Action = "CuentasPorCobrar", Icon =
                "ti-coin" },
                new { Id = "tabs-with-icons-2", Name = "Reporte de bóvedas", Action = "Bovedas", Icon = "ti-archive" },
                new { Id = "tabs-with-icons-3", Name = "Reporte de Ingresos", Action = "IngresosPorFecha", Icon =
                "ti-businessplan" },
                })
        {
            var tabName = new string(tab.Name.Where(c => char.IsLetterOrDigit(c)).ToArray());
            var isActive = (tab.Action == currentAction || entityType == tabName.ToLower()) ? "active" : "";
            <li class="nav-item" role="presentation">
                <a class="nav-link @isActive" id="@tab.Id-tab" href="@Url.Action(tab.Action, "Reportes")">
                    <span class="pc-micon"><i class="ti @tab.Icon"></i></span>
                    @tab.Name
                </a>
            </li>

        }
    </ul>
</div>

<div class="tab-content mt-3">
    <div class="tab-pane fade show active" id="tabs-with-icons-1" role="tabpanel"
        aria-labelledby="tabs-with-icons-1-tab">
        @RenderBody() <!-- Aquí es donde se renderizará el contenido de cada pestaña -->
    </div>
</div>

@await RenderSectionAsync("Scripts", required: false)
