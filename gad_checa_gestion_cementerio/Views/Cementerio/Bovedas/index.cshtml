@model gad_checa_gestion_cementerio.Models.Views.BovedaFilterModel
@{
  ViewData["Title"] = "Bovedas";
  Layout = "~/Views/Cementerio/_CementerioLayout.cshtml";
  ViewData["EntityType"] = "bovedas";
}

<!-- Card -->
<div class="mb-4 d-flex flex-column">
  <div class="m-0 overflow-x-auto">
    <div class="p-2 inline-block min-w-100 align-middle">
      <div class="bg-white border border-light overflow-hidden rounded-xl shadow-sm">
        <!-- Header -->
        <div class="px-4 py-3 d-flex justify-content-between align-items-center border-bottom">
          <div>
            <h2 class="text-dark h5 font-weight-bold">
              Seleccione un bloque
            </h2>
            <p class="text-muted s">
              Seleccione un bloque existente y, si desea, elija el piso correspondiente
            </p>
          </div>

          <div>
            <div class="d-flex gap-3 align-items-center">
              <!-- Select -->
              <div class="d-inline-block w-auto">
                <select asp-for="Bloque" class="form-control" asp-items="ViewBag.Bloques"></select>
                <span asp-validation-for="Bloque" class="text-danger mt-1 small"></span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="mx-auto">
  <!-- Botones para alternar vistas -->
  <div class="mb-4 d-flex justify-content-end gap-3">
    <button id="btnTabla" class="btn btn-outline-secondary d-flex align-items-center">
      <span class="mx-2">Ver Tabla</span>
      <svg class="w-6 h-6 ml-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
        fill="currentColor" viewBox="0 0 24 24">
        <path fill-rule="evenodd"
          d="M2 6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6Zm2 8v-2h7v2H4Zm0 2v2h7v-2H4Zm9 2h7v-2h-7v2Zm7-4v-2h-7v2h7Z"
          clip-rule="evenodd" />
      </svg>
    </button>
    <button id="btnGrafico" class="btn btn-outline-secondary d-flex align-items-center">
      <span class="mx-2">Ver Gráfico</span>
      <svg class="w-6 h-6 ml-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"
        viewBox="0 0 24 24">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="M3 15v4m6-6v6m6-4v4m6-6v6M3 11l6-5 6 5 5.5-5.5" />
      </svg>
    </button>
  </div>

  <!-- Contenedor de la Tabla (visible por defecto) -->
  <div id="tablaContainer">
    @await Html.PartialAsync("_TablaGenerica", Model.Bovedas)
  </div>

  <!-- Contenedor del Gráfico (oculto por defecto) -->
  <div id="graficoContainer" class="d-none">
    <div class="mb-4 d-flex flex-column col-12">
      <div class="m-0 overflow-x-auto">
        <div class="p-2  min-w-full align-middle">
          <div class="bg-white border border-light p-4 overflow-hidden rounded-xl shadow-sm">
            <h2 class="text-dark mb-4 h5 font-weight-bold">
              Bóvedas de Cementerio
            </h2>
            <!-- Contenedor del bloque -->
            <div class="mx-auto w-100 overflow-hidden rounded-lg shadow-md">
              <div class="d-flex">
                <!-- Calle Izquierda -->
                <div class="w-16 bg-dark d-flex align-items-center justify-content-center rounded-left">
                  <span class="text-white font-weight-bold"
                    style="writing-mode: vertical-rl; transform: rotate(180deg);">Calle B</span>
                </div>

                <!-- Bloque de bóvedas -->
                <div class="flex-grow-1">
                  <div class="bg-light p-4 pb-12">
                    @for (int i = Model.getNumeroPisos; i > 0; i--)
                    {
                      <div class="d-flex flex-column mb-4">
                        <p class="mb-2 h6 font-weight-bold">Piso @i</p>
                        <div class="d-flex flex-wrap">
                          @foreach (var item in Model.Bovedas.OrderByDescending(b => b.Numero))
                          {
                            if (item.Piso.NumeroPiso == i)
                            {
                              <div
                                class="border border-secondary bg-white position-relative rounded-lg shadow-sm p-3 d-flex flex-column align-items-center justify-content-center"
                                style="width: 100px; height: 100px;">
                                <svg style="height: 35px; width: 35px;" class="mx-auto" xmlns="http://www.w3.org/2000/svg"
                                  viewBox="0 0 256.25 418.58" stroke="currentColor">
                                  <path class="cls-1"
                                    d="m93.83,93.74c.22-4.94.59-10.02.64-15.09.2-20.47.28-40.93.43-61.4.04-5.47,1.35-10.41,6-13.9,3.4-2.55,7.45-3.16,11.47-3.22,11.85-.17,23.7-.17,35.55-.03,8.87.11,13.72,6.18,13.68,14.09-.12,25.05.08,50.09.18,75.14,0,1.33-.23,2.7.35,4.03,1.33,1.25,3.02.82,4.58.82,24.24.03,48.48.03,72.72.01,2.83,0,5.65.04,8.46.46,4.36.64,6.75,2.78,7.83,6.99.44,1.71.53,3.45.52,5.21-.01,14.14,0,28.28-.02,42.42-.01,7.12-4.2,11.88-11.29,12.81-1.59.21-3.22.18-4.84.19-24.64.16-49.27.3-73.91.45-1.07,0-2.16-.12-3.28.42-1.26,1.43-.71,3.27-.71,4.94-.03,31.65.31,63.3-.1,94.94-.5,38.65-.13,77.29-.34,115.94-.04,7.81-.14,15.62-.22,23.43-.1,9.23-5.93,15.58-15.18,15.94-7.26.28-14.54-.03-21.81-.02-5.52.01-11.05-.08-16.56.24-7.7.45-13.41-7.3-13.34-13.32.14-12.12-.15-24.24-.15-36.35-.02-44.85.29-89.7-.12-134.54-.19-21.27-.07-42.55-.34-63.82-.01-1.08-.07-2.15-.09-3.23-.06-2.98-1.52-4.39-4.54-4.38-4.44.01-8.88-.18-13.32-.18-20.87-.02-41.75,0-62.62,0-1.08,0-2.19.16-3.23-.04-6.8-1.28-8.82-2.09-9.86-9.02-.47-3.09-.37-6.18-.38-9.27-.01-10.5,0-21.01,0-31.51,0-3.53.71-6.9,1.85-10.24,1.83-5.35,5.64-7.53,11.07-7.55,16.83-.05,33.66-.11,50.5-.21,9.02-.05,18.04-.18,27.06-.29.93-.01,1.89.1,3.35-.85Z" />
                                </svg>
                                <p class="text-dark mt-2 text-center">@item.Numero</p>
                                <div
                                  style="position: absolute; bottom: 0.5rem; right: 0.5rem; height: 10px; width: 10px; background-color: #28a745; border-radius: 50%;">
                                </div>
                              </div>
                            }
                          }
                        </div>
                      </div>
                      @if (i != 1)
                      {
                        <!-- Separador visual entre pisos -->
                        <div class="border border-secondary my-4"></div>
                      }
                    }
                  </div>
                  <!-- Calle Principal -->
                  <div class="bg-dark h-14 d-flex w-100 align-items-center justify-content-center">
                    <span class="text-white font-weight-bold">Calle A</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Obtener los botones y contenedores
  const btnTabla = document.getElementById('btnTabla');
  const btnGrafico = document.getElementById('btnGrafico');
  const tablaContainer = document.getElementById('tablaContainer');
  const graficoContainer = document.getElementById('graficoContainer');

  // Añadir eventos a los botones
  btnTabla.addEventListener('click', () => {
    tablaContainer.classList.remove('d-none');
    graficoContainer.classList.add('d-none');

    btnTabla.classList.add('btn-outline-primary');
    btnGrafico.classList.remove('btn-outline-primary');
    btnGrafico.classList.add('btn-outline-secondary');
  });

  btnGrafico.addEventListener('click', () => {
    graficoContainer.classList.remove('d-none');
    tablaContainer.classList.add('d-none');

    btnGrafico.classList.add('btn-outline-primary');
    btnTabla.classList.remove('btn-outline-primary');
    btnTabla.classList.add('btn-outline-secondary');
  });
</script>
