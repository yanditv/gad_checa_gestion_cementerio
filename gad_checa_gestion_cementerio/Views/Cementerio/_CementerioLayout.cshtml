@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString();
    var entityType = Context.Request.Query["entityType"].ToString();
    // Determinar si estamos en la ruta base (Cementerio/Index)
    var isBaseRoute = string.IsNullOrEmpty(currentAction) ||
    currentAction.Equals("Index", StringComparison.OrdinalIgnoreCase);
}

<div class="border-bottom">
    <ul class="nav nav-tabs" id="cementerioTabs" role="tablist">
        @foreach (var tab in new[]
                {
                new { Id = "tabs-with-icons-1", Name = "Cementerio", Action = "Index", Icon = "box" },
                //new { Id = "tabs-with-icons-2", Name = "Bloques", Action = "Bloques", Icon = "container" },
                //new { Id = "tabs-with-icons-3", Name = "Bovedas", Action = "Bovedas", Icon = "box-multiple" },
                //new { Id = "tabs-with-icons-5", Name = "Cobros", Action = "Cobros", Icon = "currency-dollar" },
                new { Id = "tabs-with-icons-6", Name = "Tarifas", Action = "Tarifas", Icon = "settings-automation" }
                })
        {
            var tabName = new string(tab.Name.Where(c => char.IsLetterOrDigit(c)).ToArray());
            var isActive = (tab.Action == currentAction ||
            entityType == tabName.ToLower() ||
            (isBaseRoute && tab.Action == "Index")) ? "active" : "";
            <li class="nav-item" role="presentation">
                <a class="nav-link @isActive" id="@tab.Id-tab" href="@Url.Action(tab.Action, "Cementerio")">
                    <i class="ti ti-@tab.Icon"></i>
                    @tab.Name
                </a>
            </li>
        }
    </ul>
</div>

<div class="tab-content mt-3">
    <div class="tab-pane fade show active" id="tabs-with-icons-1" role="tabpanel"
        aria-labelledby="tabs-with-icons-1-tab">

        @RenderBody()
    </div>
</div>

@await RenderSectionAsync("Scripts", required: false)