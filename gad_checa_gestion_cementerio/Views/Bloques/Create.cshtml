@model gad_checa_gestion_cementerio.Data.Bloque

@{
    ViewData["Title"] = "Create";
}


<div class="bg-white px-2 flex min-h-screen justify-start rounded-3xl sm:px-10">
    <div class="py-3 w-full justify-start sm:max-w-2xl">
        <div class="px-5 py-10 relative w-full rounded-3xl sm:p-5">
            <div class="max-w-full text-left">
                <h2 class="text-gray-700 mb-2 text-xl font-semibold">Crear Bovedas</h2>
                <p class="mb-6 text-sm text-[#6A717D]">Asegúrate de completar los campos necesarios</p>

                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="flex flex-col">
                        <label asp-for="CementerioId" class="text-gray-700"></label>
                        <select asp-for="CementerioId" class="px-4 py-2 border-gray-300 text-gray-600 w-full rounded-md border focus:ring-gray-500 focus:border-gray-900 focus:outline-none sm:text-sm" asp-items="ViewBag.Cementerios"></select>
                        <span asp-validation-for="CementerioId" class="text-danger"></span>
                    </div>
                    <div class="flex flex-col">
                        <label asp-for="Descripcion" cclass="text-gray-700"></label>
                        <input asp-for="Descripcion" class="px-4 py-2 border-gray-300 text-gray-600 w-full rounded-md border focus:ring-gray-500 focus:border-gray-900 focus:outline-none sm:text-sm" />
                        <span asp-validation-for="Descripcion" class="text-danger"></span>
                    </div>
                    <div class="flex flex-col">
                        <label asp-for="Tipo" class="text-gray-700"></label>
                        <select asp-for="Tipo" class="px-4 py-2 border-gray-300 text-gray-600 w-full rounded-md border focus:ring-gray-500 focus:border-gray-900 focus:outline-none sm:text-sm" asp-items="ViewBag.Tipos"></select>
                        <span asp-validation-for="Tipo" class="text-danger"></span>
                    </div>
                    <div class="flex flex-col">
                        <label asp-for="TarifaBase" cclass="text-gray-700"></label>
                        <input asp-for="TarifaBase" class="px-4 py-2 border-gray-300 text-gray-600 w-full rounded-md border focus:ring-gray-500 focus:border-gray-900 focus:outline-none sm:text-sm" />
                        <span asp-validation-for="TarifaBase" class="text-danger"></span>
                    </div>
                    <div class="flex flex-col">
                        <label asp-for="NumeroDePisos" class="text-gray-700"></label>
                        <select asp-for="NumeroDePisos" class="px-4 py-2 border-gray-300 text-gray-600 w-full rounded-md border focus:ring-gray-500 focus:border-gray-900 focus:outline-none sm:text-sm" asp-items="ViewBag.NumeroDePisos" id="NumeroDePisos" onchange="generatePisosInputs()"></select>
                        <span asp-validation-for="NumeroDePisos" class="text-danger"></span>
                    </div>

                    <!-- Contenedor donde se agregarán dinámicamente los pisos -->
                    <div id="pisosContainer" class="my-4"></div>


                    <div class="form-group form-check">
                        <label class="text-gray-700">
                            <input class="form-check-input" asp-for="Estado" /> @Html.DisplayNameFor(model => model.Estado)
                        </label>
                    </div>
                    <div class="pt-6 space-x-4 flex items-center">
                        <a asp-action="Index" class="text-white bg-gray-900 px-4 py-3 flex items-center justify-center rounded-md focus:outline-none">Cancelar</a>
                        <input type="submit" value="Guardar" class="bg-blue-700 text-white px-4 py-3 flex items-center justify-center rounded-md focus:outline-none" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript para generar los campos dinámicamente -->
<script>
    function generatePisosInputs() {
        let numPisos = document.getElementById("NumeroDePisos").value;
        let container = document.getElementById("pisosContainer");
        container.innerHTML = ""; // Limpiar contenido anterior

        for (let i = 0; i < numPisos; i++) {
            let pisoHtml = `
                <div class="gap-4 p-4 my-2 flex flex-row items-center rounded-lg border">
                    <div class="flex flex-col">
                        <label class="text-gray-700">Número de Piso</label>
                        <input name="Pisos[${i}].NumeroPiso" value="${i + 1}" class="px-4 py-2 border-gray-300 text-gray-600 w-full rounded-md border focus:ring-gray-500 focus:border-gray-900 focus:outline-none sm:text-sm" readonly />
                    </div>
                    <div class="flex flex-col">
                        <label class="text-gray-700">Precio Piso</label>
                        <input name="Pisos[${i}].Precio" type="number" step="0.01" class="px-4 py-2 border-gray-300 text-gray-600 w-full rounded-md border focus:ring-gray-500 focus:border-gray-900 focus:outline-none sm:text-sm" />
                    </div>
                                       <div class="flex flex-col">
                        <label class="text-gray-700">Cantidad de bovedas</label>
                        <input name="Pisos[${i}]." type="number" step="0.01" class="px-4 py-2 border-gray-300 text-gray-600 w-full rounded-md border focus:ring-gray-500 focus:border-gray-900 focus:outline-none sm:text-sm" />
                    </div>
                </div>
            `;
            container.insertAdjacentHTML("beforeend", pisoHtml);
        }
    }

    // Escuchar cambios en el select
    document.getElementById("NumeroDePisos").addEventListener("change", generatePisosInputs);
</script>