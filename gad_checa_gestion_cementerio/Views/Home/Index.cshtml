@model gad_checa_gestion_cementerio.Models.Views.DashboardViewModel
@{
    ViewData["Title"] = "Home Page";
}
<!-- Script de datos generado desde el backend -->
<script>
    const datosIngresos = @Html.Raw(Json.Serialize(Model.IngresosMensuales));
</script>

<div class="row">

    <!-- TARJETAS ESTADÍSTICAS -->
    <div class="col-md-6 col-xl-3">

        <div class="card">
            <div class="card-body">
                <h6 class="mb-2 f-w-400 text-muted">Número de Difuntos</h6>
                <h4 class="mb-3">@Model.NumeroDifuntos 
                    <span class="badge bg-light-primary border border-primary">
                        <svg  xmlns="http://www.w3.org/2000/svg"  width="15"  height="15"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-cross"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M10 21h4v-9h5v-4h-5v-5h-4v5h-5v4h5z" />
                        </svg>
                    </span>
                </h4>
                <p class="mb-0 text-muted text-sm">Total <span class="text-primary">registrados</span> en el sistema</p>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-xl-3">
        <div class="card">
            <div class="card-body">
                <h6 class="mb-2 f-w-400 text-muted">Bóvedas Disponibles</h6>
                <h4 class="mb-3">@Model.BovedasDisponibles  
                    <span class="badge bg-light-primary border border-primary">
                    <svg  xmlns="http://www.w3.org/2000/svg"  width="15"  height="15"  viewBox="0 0 24 24"  fill="currentColor"  class="icon icon-tabler icons-tabler-filled icon-tabler-box-multiple"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M6 5.667a3.667 3.667 0 0 1 3.667 -3.667h8.666a3.667 3.667 0 0 1 3.667 3.667v8.666a3.667 3.667 0 0 1 -3.667 3.667h-8.666a3.667 3.667 0 0 1 -3.667 -3.667z" /><path d="M2 9c0 -1.094 .533 -1.828 1.514 -2.374a1 1 0 1 1 .972 1.748c-.398 .221 -.486 .342 -.486 .626v10c0 .548 .452 1 1 1h9.998c.32 0 .618 -.154 .805 -.407l.065 -.1a1 1 0 1 1 1.738 .99a3 3 0 0 1 -2.606 1.517h-10c-1.652 0 -3 -1.348 -3 -3z" /></svg>
                </span></h4>
                <p class="mb-0 text-muted text-sm">Bóvedas <span class="text-primary">sin contrato</span> activo</p>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-xl-3">
        <div class="card">
            <div class="card-body">
                <h6 class="mb-2 f-w-400 text-muted">Bóvedas Ocupadas</h6>
                <h4 class="mb-3">@Model.BovedasOcupadas</h4>
                <p class="mb-0 text-muted text-sm">Bóvedas con contrato activo</p>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-xl-3">
        <div class="card">
            <div class="card-body">
                <h6 class="mb-2 f-w-400 text-muted">Nichos Disponibles</h6>
                <h4 class="mb-3">@Model.NichosDisponibles</h4>
                <p class="mb-0 text-muted text-sm">Nichos actualmente libres</p>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-xl-3">
        <div class="card">
            <div class="card-body">
                <h6 class="mb-2 f-w-400 text-muted">Nichos Ocupados</h6>
                <h4 class="mb-3">@Model.NichosOcupados</h4>
                <p class="mb-0 text-muted text-sm">Nichos ya asignados</p>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-xl-3">
        <div class="card">
            <div class="card-body">
                <h6 class="mb-2 f-w-400 text-muted">Bóvedas por Caducar</h6>
                <h3 class="mb-3">@Model.BovedasPorCaducar</h3>
                <p class="mb-0 text-muted text-sm">Contratos vencen hoy o ya vencidos</p>
            </div>
        </div>
    </div>

    <!-- GRÁFICO DE INGRESOS MENSUALES + HISTORIAL DE TRANSACCIONES -->
    <div class="row">
        <div class="col-md-12 col-xl-8">
            <h5 class="mb-3">Ingresos Mensuales</h5>
            <div class="card">
                <div class="card-body">
                    <canvas id="visitor-chart" height="200"></canvas>
                </div>
            </div>
        </div>

        <!-- HISTORIAL DE TRANSACCIONES -->
        <div class="col-md-12 col-xl-4">
            <h5 class="mb-3">Historial de Transacciones</h5>
            <div class="card">
                <div class="list-group list-group-flush">
                    @foreach (var tx in Model.TransaccionesRecientes)
                    {
                        <div class="list-group-item">
                            <div class="d-flex">
                                <div class="flex-shrink-0">
                                    <div class="avtar avtar-s rounded-circle text-primary bg-light-primary">
                                        <i class="ti ti-wallet f-18"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h6 class="mb-1">@tx.NombrePersona</h6>
                                    <p class="mb-0 text-muted">@tx.FechaPago.ToString("dd MMM yyyy, hh:mm tt")</p>
                                </div>
                                <div class="flex-shrink-0 text-end">
                                    <h6 class="mb-1">+ $@tx.Monto.ToString("N2")</h6>
                                    <p class="mb-0 text-muted">#@tx.NumeroComprobante</p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>


    <!-- ÚLTIMOS CONTRATOS -->
    <div class="col-12">
        <h5 class="mb-3">Últimos Contratos</h5>
        <div class="card tbl-card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover table-borderless mb-0">
                        <thead>
                            <tr>
                                <th>Número</th>
                                <th>Fecha Fin</th>
                                <th>Estado</th>
                                <th>Cuotas Pendientes</th>
                                <th class="text-end">Monto</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var contrato in Model.UltimosContratos)
                            {
                                <tr>
                                    <td><a href="#" class="text-muted">@contrato.NumeroSecuencial</a></td>
                                    <td>@contrato.FechaFin.ToShortDateString()</td>
                                    <td>
                                        <span class="d-flex align-items-center gap-2">
                                            <i class="fas fa-circle f-10"
                                               style="color:@(contrato.EstadoContrato switch {
                                                   "Vencido" => "red",
                                                   "Próximo a vencer" => "orange",
                                                   "Pendiente de pago" => "#ffc107",
                                                   _ => "green"
                                               })">
                                            </i> @contrato.EstadoContrato
                                        </span>
                                    </td>
                                    <td>@contrato.CuotasPendientes</td>
                                    <td class="text-end">$@contrato.MontoTotal.ToString("N2")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- LIBRERÍA CHART.JS Y GRÁFICO PERSONALIZADO -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const meses = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio",
                   "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"];

    const labels = datosIngresos.map(d => meses[d.mes - 1] + " " + d.anio);
    const dataIngresado = datosIngresos.map(d => d.totalIngresado);
    const dataDeuda = datosIngresos.map(d => d.totalDeuda);

    const ctx = document.getElementById('visitor-chart').getContext('2d');
    const chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [
                {
                    label: 'Ingresos',
                    backgroundColor: 'rgba(40, 167, 69, 0.6)',
                    borderColor: 'rgba(40, 167, 69, 1)',
                    data: dataIngresado
                },
                {
                    label: 'Deudas',
                    backgroundColor: 'rgba(220, 53, 69, 0.6)',
                    borderColor: 'rgba(220, 53, 69, 1)',
                    data: dataDeuda
                }
            ]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'bottom' },
                title: {
                    display: true,
                    text: 'Resumen mensual de ingresos y deudas'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: value => '$' + value
                    }
                }
            }
        }
    });
</script>