@model gad_checa_gestion_cementerio.Models.Views.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}
<!-- Script de datos generado desde el backend -->
<script>
    const datosIngresos = @Html.Raw(Json.Serialize(Model.IngresosMensuales));
</script>

<div class="row">

    <!-- TARJETAS ESTADÍSTICAS -->
<!-- Número de Difuntos -->
<div class="col-md-6 col-xl-3">
    <div class="card">
        <div class="card-body">
            <h6 class="mb-2 f-w-400 text-muted">Número de Difuntos</h6>
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4 class="mb-0">@Model.NumeroDifuntos</h4>
                <span class="badge bg-light-danger border border-danger">
                    <i class="ti ti-trending-up"></i>
                </span>
            </div>
            <p class="mb-0 text-muted text-sm">
                Total <span class="text-danger">registrados</span> en el sistema
            </p>
        </div>
    </div>
</div>

<!-- Bóvedas Disponibles -->
<div class="col-md-6 col-xl-3">
    <div class="card">
        <div class="card-body">
            <h6 class="mb-2 f-w-400 text-muted">Bóvedas Disponibles</h6>
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4 class="mb-0">@Model.BovedasDisponibles</h4>
                <span class="badge bg-light-success border border-success">
                    <i class="ti ti-box"></i>
                </span>
            </div>
            <p class="mb-0 text-muted text-sm">
                Bóvedas <span class="text-success">sin contrato</span> activo
            </p>
        </div>
    </div>
</div>

<!-- Bóvedas Ocupadas -->
<div class="col-md-6 col-xl-3">
    <div class="card">
        <div class="card-body">
            <h6 class="mb-2 f-w-400 text-muted">Bóvedas Ocupadas</h6>
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4 class="mb-0">@Model.BovedasOcupadas</h4>
                <span class="badge bg-light-secondary border border-secondary">
                    <i class="ti ti-user-check"></i>
                </span>
            </div>
            <p class="mb-0 text-muted text-sm">
                Bóvedas con contrato <span class="text-secondary">activo</span>
            </p>
        </div>
    </div>
</div>

<!-- Nichos Disponibles -->
<div class="col-md-6 col-xl-3">
    <div class="card">
        <div class="card-body">
            <h6 class="mb-2 f-w-400 text-muted">Nichos Disponibles</h6>
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4 class="mb-0">@Model.NichosDisponibles</h4>
                <span class="badge bg-light-success border border-success">
                    <i class="ti ti-check"></i>
                </span>
            </div>
            <p class="mb-0 text-muted text-sm">
                Nichos actualmente <span class="text-success">libres</span>
            </p>
        </div>
    </div>
</div>

<!-- Nichos Ocupados -->
<div class="col-md-6 col-xl-3">
    <div class="card">
        <div class="card-body">
            <h6 class="mb-2 f-w-400 text-muted">Nichos Ocupados</h6>
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4 class="mb-0">@Model.NichosOcupados</h4>
                <span class="badge bg-light-secondary border border-secondary">
                    <i class="ti ti-user"></i>
                </span>
            </div>
            <p class="mb-0 text-muted text-sm">
                Nichos ya <span class="text-secondary">asignados</span>
            </p>
        </div>
    </div>
</div>

<!-- Bóvedas por Caducar -->
<div class="col-md-6 col-xl-3">
    <div class="card">
        <div class="card-body">
            <h6 class="mb-2 f-w-400 text-muted">Bóvedas por Caducar</h6>
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4 class="mb-0 text-warning">@Model.BovedasPorCaducar</h4>
                <span class="badge bg-light-warning border border-warning">
                    <i class="ti ti-alert-triangle"></i>
                </span>
            </div>
            <p class="mb-0 text-muted text-sm">
                Contratos <span class="text-warning">por vencer o vencidos</span>
            </p>
        </div>
    </div>
</div>

  <div class="col-md-12 col-xl-8">
    <div class="d-flex align-items-center justify-content-between mb-3">
      <h5 class="mb-0">Ingresos Mensuales</h5>
    </div>
    <div class="card">
      <div class="card-body">
        <div class="tab-content" id="chart-tab-tabContent">
          <div class="tab-pane show active" id="chart-tab-profile" role="tabpanel"
            aria-labelledby="chart-tab-profile-tab" tabindex="0">
            <div id="ingresos-chart"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
    <!-- GRÁFICO DE INGRESOS MENSUALES + HISTORIAL DE TRANSACCIONES -->
        <!-- HISTORIAL DE TRANSACCIONES -->
<div class="col-md-12 col-xl-4">
    <h5 class="mb-3">Historial de Transacciones</h5>
    <div class="card">
        <div class="list-group list-group-flush">
            @foreach (var tx in Model.TransaccionesRecientes)
            {
                <a href="#" class="list-group-item list-group-item-action">
                    <div class="d-flex">
                        <div class="flex-shrink-0">
                            <div class="avtar avtar-s rounded-circle text-primary bg-light-primary">
                                <i class="ti ti-wallet f-18"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h6 class="mb-1">@tx.NombrePersona</h6>
                            <p class="mb-0 text-muted">@tx.FechaPago.ToString("dd MMM yyyy, hh:mm tt")</p>
                        </div>
                        <div class="flex-shrink-0 text-end">
                            <h6 class="mb-1 text-@(tx.Monto >= 0 ? "success" : "danger")">
                                @(tx.Monto >= 0 ? "+ $" : "- $")@Math.Abs(tx.Monto).ToString("N2")
                            </h6>
                            <p class="mb-0 text-muted">#@tx.NumeroComprobante</p>
                        </div>
                    </div>
                </a>
            }
        </div>
    </div>
</div>


    <!-- ÚLTIMOS CONTRATOS -->
    <div class="col-md-12 col-xl-8">
        <h5 class="mb-3">Últimos Contratos</h5>
        <div class="card tbl-card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover table-borderless mb-0">
                        <thead>
                            <tr>
                                <th>Número</th>
                                <th>Fecha Fin</th>
                                <th>Estado</th>
                                <th>Cuotas Pendientes</th>
                                <th class="text-end">Monto</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var contrato in Model.UltimosContratos)
                            {
                                <tr>
                                    <td><a href="#" class="text-muted">@contrato.NumeroSecuencial</a></td>
                                    <td>@contrato.FechaFin.ToShortDateString()</td>
                                    <td>
                                        <span class="d-flex align-items-center gap-2">
                                            <i class="fas fa-circle f-10"
                                               style="color:@(contrato.EstadoContrato switch {
                                                   "Vencido" => "red",
                                                   "Próximo a vencer" => "orange",
                                                   "Pendiente de pago" => "#ffc107",
                                                   _ => "green"
                                               })">
                                            </i> @contrato.EstadoContrato
                                        </span>
                                    </td>
                                    <td>@contrato.CuotasPendientes</td>
                                    <td class="text-end">$@contrato.MontoTotal.ToString("N2")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12 col-xl-4">
        <h5 class="mb-3">Ingresos</h5>
        <div class="card">
            <div class="card-body">
            <h6 class="mb-2 f-w-400 text-muted">Total ingresos</del></h6>
            <h3 class="mb-0">$@Model.IngresosMensuales.Sum(s=>s.TotalIngresado)</h3>
            <div id="sales-report-chart1"></div>
            </div>
        </div>
    </div>

</div>


<!-- [Page Specific JS] start -->
<script src="~/js/plugins/apexcharts.min.js"></script>
<script src="~/js/pages/dashboard-default.js"></script>

<script>
  const meses = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio",
                 "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"];

  // Inicializar acumuladores por mes
  const ingresosPorMes = Array(12).fill(0);
  const deudasPorMes = Array(12).fill(0);

  datosIngresos.forEach(d => {
    const mesIndex = d.mes - 1;
    ingresosPorMes[mesIndex] += d.totalIngresado;
    deudasPorMes[mesIndex] += d.totalDeuda;
  });

  var options = {
    chart: {
      height: 450,
      type: 'area',
      toolbar: {
        show: false
      }
    },
    dataLabels: {
      enabled: false
    },
    colors: ['#1890ff', '#13c2c2'],
    series: [
      {
        name: 'Ingresos',
        data: ingresosPorMes
      },
      {
        name: 'Deudas',
        data: deudasPorMes
      }
    ],
    stroke: {
      curve: 'smooth',
      width: 2
    },
    xaxis: {
      categories: meses
    }
  };

  var chart = new ApexCharts(document.querySelector('#ingresos-chart'), options);
  chart.render();
</script>

<script>
  // Convertir número de mes a nombre
  const nombresMeses = [
    '', 'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
  ];

  const categorias = datosIngresos.map(d => nombresMeses[d.mes]);
  const ingresos = datosIngresos.map(d => d.totalIngresado);
  const deudas = datosIngresos.map(d => d.totalDeuda);

  const options1 = {
    chart: {
      type: 'bar',
      height: 430,
      toolbar: {
        show: false
      }
    },
    plotOptions: {
      bar: {
        columnWidth: '30%',
        borderRadius: 4
      }
    },
    stroke: {
      show: true,
      width: 8,
      colors: ['transparent']
    },
    dataLabels: {
      enabled: false
    },
    legend: {
      position: 'top',
      horizontalAlign: 'right',
      show: true,
      fontFamily: `'Public Sans', sans-serif`,
      offsetX: 10,
      offsetY: 10,
      labels: {
        useSeriesColors: false
      },
      markers: {
        width: 10,
        height: 10,
        radius: '50%',
        offsetX: 2,
        offsetY: 2
      },
      itemMargin: {
        horizontal: 15,
        vertical: 5
      }
    },
    colors: ['#faad14', '#1890ff'],
    series: [
      {
        name: 'Ingresos',
        data: ingresos
      },
      {
        name: 'Deudas',
        data: deudas
      }
    ],
    xaxis: {
      categories: categorias
    }
  };

  const chart1 = new ApexCharts(document.querySelector('#sales-report-chart1'), options1);
  chart1.render();
</script>


