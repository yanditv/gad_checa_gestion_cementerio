version: '3.8'

services:
  sqlserver-checa:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-checa
    ports:
      - "${MSSQL_PORT}:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
      - MSSQL_PID=${MSSQL_PID}
    volumes:
      - sql_data:/var/opt/sqlserver
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $${SA_PASSWORD} -Q 'SELECT 1'" ]
      interval: 5s
      timeout: 5s
      retries: 20
    env_file:
      - .env
    networks:
      - cementerio-net
  sql-init:
    image: mcr.microsoft.com/mssql-tools
    container_name: sql-init
    depends_on:
      sqlserver-checa:
        condition: service_healthy
    volumes:
      - ./init.sql:/init.sql
    entrypoint: >
      /bin/bash -c "
      echo 'Esperando que SQL Server esté listo...' &&
      for i in {1..30}; do
        /opt/mssql-tools/bin/sqlcmd -S sqlserver-checa -U sa -P '#gestion-cementerio-2025!' -Q 'SELECT 1' && break || sleep 1;
      done &&
      echo 'Ejecutando script SQL...' &&
      /opt/mssql-tools/bin/sqlcmd -S sqlserver-checa -U sa -P '#gestion-cementerio-2025!' -i /init.sql
      "
    environment:
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    restart: "no"
    env_file:
      - .env
    networks:
      - cementerio-net
  app:
    build:
      context: .
      dockerfile: gad_checa_gestion_cementerio/Dockerfile
    ports:
      - "3005:8080"
    environment:
      - DB_CONNECTION_STRING=Server=sqlserver-checa;Database=${MSSQL_DATABASE};User=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True;  # ¡Nueva variable!
    depends_on:
      sqlserver-checa:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cementerio-net
    volumes:
      - ./data-protection-keys:/app/keys
volumes:
  sql_data:
  dataprotection-keys:
networks:
  cementerio-net:
    driver: bridge